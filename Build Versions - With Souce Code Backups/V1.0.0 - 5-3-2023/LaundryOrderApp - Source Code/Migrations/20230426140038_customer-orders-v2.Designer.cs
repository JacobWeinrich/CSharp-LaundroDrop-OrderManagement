// <auto-generated />
using LaundryOrderAppMain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaundryOrderAppMain.Migrations
{
    [DbContext(typeof(LaundryOrderDbContext))]
    [Migration("20230426140038_customer-orders-v2")]
    partial class customerordersv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaundryOrderAppMain.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComercial")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "5240 Windswept ln House Springs MO 63051",
                            Email = "Jacob@segotw.com",
                            Instructions = "",
                            IsComercial = false,
                            Name = "Jacob Weinrich",
                            Phone = "314-939-9335"
                        });
                });

            modelBuilder.Entity("LaundryOrderAppMain.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("BlanketsFull")
                        .HasColumnType("int");

                    b.Property<int>("BlanketsKing")
                        .HasColumnType("int");

                    b.Property<int>("BlanketsQueen")
                        .HasColumnType("int");

                    b.Property<int>("BlanketsTwin")
                        .HasColumnType("int");

                    b.Property<int>("ComfortersFull")
                        .HasColumnType("int");

                    b.Property<int>("ComfortersKing")
                        .HasColumnType("int");

                    b.Property<int>("ComfortersQueen")
                        .HasColumnType("int");

                    b.Property<int>("ComfortersTwin")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("HorseBlankets")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComercial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPickedUp")
                        .HasColumnType("bit");

                    b.Property<double>("LaundryPounds")
                        .HasColumnType("float");

                    b.Property<int>("Pillows")
                        .HasColumnType("int");

                    b.Property<int>("RugsLarge")
                        .HasColumnType("int");

                    b.Property<int>("RugsSmall")
                        .HasColumnType("int");

                    b.Property<int>("SleepingBagDouble")
                        .HasColumnType("int");

                    b.Property<int>("SleepingBagSingle")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            BlanketsFull = 0,
                            BlanketsKing = 0,
                            BlanketsQueen = 0,
                            BlanketsTwin = 0,
                            ComfortersFull = 0,
                            ComfortersKing = 0,
                            ComfortersQueen = 0,
                            ComfortersTwin = 0,
                            CustomerID = 1,
                            HorseBlankets = 0,
                            Instructions = "",
                            IsComercial = false,
                            IsPaid = false,
                            IsPickedUp = false,
                            LaundryPounds = 0.0,
                            Pillows = 0,
                            RugsLarge = 0,
                            RugsSmall = 0,
                            SleepingBagDouble = 0,
                            SleepingBagSingle = 0,
                            TotalPrice = 0.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
